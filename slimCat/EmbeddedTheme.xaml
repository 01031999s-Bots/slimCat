<!--
Copyright (c) 2013, Justin Kadrovach
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:
    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.
    * Neither the name of the <organization> nor the
      names of its contributors may be used to endorse or promote products
      derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL JUSTIN KADROVACH BE LIABLE FOR ANY
DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:lib="clr-namespace:lib"
                    xmlns:sys="clr-namespace:System"
                    xmlns:v="clr-namespace:Views">
    
    <BooleanToVisibilityConverter x:Key="BoolConverter" />
    <sys:OppositeBoolConverter x:Key="OppositeBoolConverter" />
    <sys:BoolColorConverter x:Key="ColorConverter"/>
    <sys:BBCodePostConverter x:Key="BBPostConverter" />
    <sys:BBCodeConverter x:Key="BBCodeConverter" />
    <sys:GenderColorConverter x:Key="GenderColorConverter" />
    <sys:GenderImageConverter x:Key="GenderImageConverter" />
    <sys:ChannelTypeToImageConverter x:Key="ChannelTypeToImageConverter"/>
    
    <DataTemplate x:Key="MessageView">
        <v:MessageView />
    </DataTemplate>
    
    <DataTemplate x:Key="HistoryView">
        <v:HistoryView />
    </DataTemplate>

    <MouseBinding x:Key="TunnelingRightClickOpenMenu"
                      MouseAction="RightClick"
                      Command="{Binding Path=DataContext.OpenRightClickMenuCommand,
                      RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    
    <MouseBinding x:Key="RightClickOpenMenu"
                      MouseAction="RightClick"
                      Command="{Binding OpenRightClickMenuCommand}"/>

    <Style TargetType="Hyperlink" x:Key="TunnelingUsernameStyle">
        <Setter Property="Command" Value="{Binding Path=DataContext.NavigateTo,
                                            RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="TextDecorations" Value="{x:Null}"/>
        <Setter Property="TextBlock.FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{StaticResource HighlightBrush}"/>
    </Style>

    <Style TargetType="Hyperlink" x:Key="UsernameStyle" BasedOn="{StaticResource TunnelingUsernameStyle}">
        <Setter Property="Command" Value="{Binding Path=DataContext.NavigateTo,
                                            RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}"/>
    </Style>

    <DataTemplate x:Key="TunnelingUsernameTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="15"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>

            <Rectangle Fill="{Binding Path=Gender, Mode=OneTime, Converter={StaticResource GenderColorConverter}}"
                       Height="15" Width="15">
                <Rectangle.OpacityMask>
                    <ImageBrush ImageSource="{Binding Path=Gender, Mode=OneTime, Converter={StaticResource GenderImageConverter}}"/>
                </Rectangle.OpacityMask>
            </Rectangle>
            
            <TextBlock TextWrapping="Wrap"
                       Grid.Column="1">
                <Hyperlink CommandParameter="{Binding Path=Name, Mode=OneTime}"
                           Style="{StaticResource TunnelingUsernameStyle}">
                    <Run Text="{Binding Path=Name, Mode=OneTime}"/>
                    <Hyperlink.InputBindings>
                        <MouseBinding MouseAction="RightClick"
                                      Command="{Binding Path=DataContext.OpenRightClickMenuCommand,
                                      RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                      CommandParameter="{Binding Path=Name, Mode=OneTime}"/>
                    </Hyperlink.InputBindings>
                </Hyperlink>
        </TextBlock>

        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="UsernameTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="15"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>

            <Rectangle Fill="{Binding Path=Gender, Mode=OneTime, Converter={StaticResource GenderColorConverter}}"
                       Height="15" Width="15">
                <Rectangle.OpacityMask>
                    <ImageBrush ImageSource="{Binding Path=Gender, Mode=OneTime, Converter={StaticResource GenderImageConverter}}"/>
                </Rectangle.OpacityMask>
            </Rectangle>
            <TextBlock TextWrapping="Wrap"
                       Grid.Column="1">
                <Hyperlink CommandParameter="{Binding Path=Name, Mode=OneTime}"
                           Style="{StaticResource UsernameStyle}">
                    <Run Text="{Binding Path=Name, Mode=OneTime}"/>
                                    <Hyperlink.InputBindings>
                        <MouseBinding MouseAction="RightClick"
                                      Command="{Binding Path=DataContext.OpenRightClickMenuCommand,
                                      RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}"
                                      CommandParameter="{Binding Path=Name, Mode=OneTime}"/>
                    </Hyperlink.InputBindings>
                </Hyperlink>
            </TextBlock>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="CharacterUpdateTemplate">
        <Grid ToolTip="{Binding Path=TimeStamp, Mode=OneTime}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            
            <TextBlock Foreground="{StaticResource ForegroundBrush}"
                       TextAlignment="Left"
                       TextWrapping="Wrap">
                <lib:TextBlockHelper.InlineList>
                    <MultiBinding Converter="{StaticResource BBPostConverter}">
                        <Binding Path="."
                                 Mode="OneTime"/>
                    </MultiBinding>
                </lib:TextBlockHelper.InlineList>
            </TextBlock>
            
            <v:CloseButtonView Grid.Column="1"
                               VerticalAlignment="Top"
                               Command="{Binding Path=DataContext.RemoveNotificationCommand,
                               RelativeSource={RelativeSource Mode=FindAncestor,
                               AncestorType={x:Type ItemsControl}} }"
                               CommandParameter="{Binding}"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ChannelUpdateTemplate">
        <Grid ToolTip="{Binding Path=TimeStamp, Mode=OneTime}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock TextWrapping="Wrap"
                       TextAlignment="Left">
                <InlineUIContainer BaselineAlignment="TextBottom">
                    <Button Content="{Binding Path=ChannelTitle, Mode=OneWay}"
	                        Style="{StaticResource ChannelInterfaceButton}"
	                        CommandParameter="{Binding Path=ChannelID, Mode=OneWay}" />
                
                </InlineUIContainer>
                <Run Text="{Binding Path=Arguments, Mode=OneWay}"
                     Foreground="{StaticResource ForegroundBrush}"/>
            </TextBlock>

            <v:CloseButtonView Grid.Column="1"
                               VerticalAlignment="Top"
                               Command="{Binding Path=DataContext.RemoveNotificationCommand,
                               RelativeSource={RelativeSource Mode=FindAncestor,
                               AncestorType={x:Type ItemsControl}} }"
                               CommandParameter="{Binding}"/>
        </Grid>
    </DataTemplate>

    <Style TargetType="Hyperlink" x:Key="TunnelingHyperlink">
        <Setter Property="Command" Value="{Binding Path=DataContext.NavigateTo,
                                  RelativeSource={RelativeSource Mode=FindAncestor,
                                  AncestorType={x:Type ItemsControl}} }" />

        <Setter Property="Foreground" Value="{StaticResource DepressedBrush}" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource HighlightBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="GenderCheckBoxes" TargetType="ContentControl">
        <StackPanel Orientation="Vertical">
            <TextBlock Foreground="{StaticResource ForegroundBrush}"
                       Text="Show ..."
                       Margin="2,0"/>
            <CheckBox IsChecked="{Binding ShowMales}">Males</CheckBox>
            <CheckBox IsChecked="{Binding ShowFemales}">Females</CheckBox>
            <CheckBox IsChecked="{Binding ShowMaleHerms}">Masculine Herms</CheckBox>
            <CheckBox IsChecked="{Binding ShowFemaleHerms}">Feminine Herms</CheckBox>
            <CheckBox IsChecked="{Binding ShowCuntboys}">Cuntboys</CheckBox>
            <CheckBox IsChecked="{Binding ShowTransgenders}">Transgenders</CheckBox>
            <CheckBox IsChecked="{Binding ShowShemales}">Shemales</CheckBox>
            <CheckBox IsChecked="{Binding ShowNoGenders}">Genderless</CheckBox>
        </StackPanel>
    </ControlTemplate>

    <ControlTemplate x:Key="GeneralFilterCheckBoxes" TargetType="ContentControl">
        <StackPanel Orientation="Vertical">
            <TextBlock Foreground="{StaticResource ForegroundBrush}"
                       Text="Who are ..."
                       Margin="2,0"/>
            <CheckBox IsChecked="{Binding ShowFriends}">Friends</CheckBox>
            <CheckBox IsChecked="{Binding ShowBookmarks}">Bookmarked</CheckBox>
            <CheckBox IsChecked="{Binding ShowMods}">Moderators</CheckBox>
            <CheckBox IsChecked="{Binding ShowNotInterested}">Not Interesting</CheckBox>
            <CheckBox IsChecked="{Binding ShowIgnored}">Ignored</CheckBox>
            <CheckBox IsChecked="{Binding ShowLooking}">Looking For Play</CheckBox>
            <CheckBox IsChecked="{Binding ShowNormal}">Just Online</CheckBox>
            <CheckBox IsChecked="{Binding ShowBusyAway}">Busy or Away</CheckBox>
            <CheckBox IsChecked="{Binding ShowDND}">DND</CheckBox>
        </StackPanel>
    </ControlTemplate>
</ResourceDictionary>