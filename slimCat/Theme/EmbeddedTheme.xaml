<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:utilities="clr-namespace:slimCat.Utilities"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:models="clr-namespace:slimCat.Models"
                    xmlns:v="clr-namespace:slimCat.Views"
                    mc:Ignorable="d">

    <SolidColorBrush Color="{StaticResource ForegroundColor}" Opacity="0.9" x:Key="HistoryBrush" />

    <BooleanToVisibilityConverter x:Key="BoolConverter" />
    <utilities:OppositeBoolConverter x:Key="OppositeBoolConverter" />
    <utilities:BoolColorConverter x:Key="ColorConverter" />
    <utilities:GenderImageConverter x:Key="GenderImageConverter" />
    <utilities:ChannelTypeToImageConverter x:Key="ChannelTypeToImageConverter" />
    <utilities:GreaterThanZeroConverter x:Key="GreaterThanZeroConverter" />
    <utilities:MessageInterestedColorConverter x:Key="MessageInterestedColorConverter" />
    <utilities:MessageDelimiterColorConverter x:Key="DelimiterColorConverter" />
    <utilities:CharacterStatusOpacityConverter x:Key="CharacterStatusOpacityConverter"/>
    <utilities:MessageThicknessConverter x:Key="MessageThicknessConverter"/>
    <utilities:NotEmptyConverter x:Key="NotEmptyConverter"/>
    <utilities:EmptyConverter x:Key="EmptyConverter"/>
    <utilities:ImagePathConverter x:Key="ImagePathConverter"/>
    <utilities:NotNullConverter x:Key="NotNullConverter"/>

    <!-- These will be replaced with their instance values by the container -->
    <utilities:GenderColorConverter x:Key="GenderColorConverter" />
    <utilities:NameplateColorConverter x:Key="NameplateColorConverter" />
    <utilities:NameplateMessageColorConverter x:Key="NameplateMessageColorConverter" />
    <utilities:BbFlowConverter x:Key="BbFlowConverter" />
    <utilities:BbCodePostConverter x:Key="BbPostConverter" />
    <utilities:BbCodeConverter x:Key="BbCodeConverter" />
    <utilities:ForegroundBrushConverter x:Key="ForegroundBrushConverter" />

    <MouseBinding x:Key="RightClickOpenMenu"
                  MouseAction="RightClick"
                  Command="{Binding Path=DataContext.OpenRightClickMenuCommand,
                      RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />

    <Style TargetType="Hyperlink" x:Key="ChannelStyle">
        <Setter Property="Command"
                Value="{Binding Path=DataContext.JoinChannelCommand,
                    RelativeSource={RelativeSource Mode=FindAncestor,
                    AncestorType={x:Type Grid}, AncestorLevel=2} }" />
        <Setter Property="TextDecorations" Value="{x:Null}" />
        <Setter Property="TextBlock.FontWeight" Value="Medium" />

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>

            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Foreground" Value="{StaticResource HighlightBrush}" />
            </Trigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DepressedBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Hyperlink" x:Key="UsernameStyle"
           d:DataContext="{d:DesignInstance models:ICharacter}">
        <Setter Property="Command"
                Value="{Binding Path=DataContext.NavigateTo,
                                RelativeSource={RelativeSource AncestorType={x:Type Grid}, AncestorLevel=2}}" />
        <Setter Property="TextDecorations" Value="{x:Null}" />
        <Setter Property="TextBlock.FontWeight" Value="Medium" />
        <Setter Property="Foreground" Value="{StaticResource HighlightBrush}" />
    </Style>

    <DataTemplate x:Key="ChannelTemplate"
                  DataType="models:GeneralChannelModel">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="15" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>

            <Rectangle Height="15" Width="15" Fill="{StaticResource HighlightBrush}">
                <Rectangle.OpacityMask>
                    <ImageBrush
                        ImageSource="{Binding Path=Type, Mode=OneTime, Converter={StaticResource ChannelTypeToImageConverter}}" />
                </Rectangle.OpacityMask>
            </Rectangle>

            <TextBlock TextWrapping="Wrap"
                       Grid.Column="1"
                       Margin="2,0,0,0"
                       TextAlignment="Left"
                       MaxWidth="165">
                <Hyperlink CommandParameter="{Binding Path=Id, Mode=OneTime}"
                           Style="{StaticResource ChannelStyle}">
                    <Run Text="{Binding Path=Title, Mode=OneTime}" />
                    <Run Text="{Binding Path=DisplayNumber, Mode=OneWay}" />
                </Hyperlink>
            </TextBlock>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="UsernameTemplate"
                  DataType="models:CharacterModel">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="15" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>

            <Rectangle Height="15" Width="15"
                       Fill="{Binding Converter={StaticResource GenderColorConverter}, Mode=OneWay}">
                <Rectangle.OpacityMask>
                    <ImageBrush
                        ImageSource="{Binding Path=Gender, Mode=OneTime, Converter={StaticResource GenderImageConverter}}" />
                </Rectangle.OpacityMask>
            </Rectangle>

            <TextBlock TextWrapping="Wrap"
                       Grid.Column="1">
                <Hyperlink CommandParameter="{Binding Path=Name, Mode=OneTime}"
                           Style="{StaticResource UsernameStyle}"
                           Foreground="{Binding Converter={StaticResource NameplateColorConverter}, Mode=OneWay}">
                    <Run Text="{Binding Path=Name, Mode=OneTime}" />
                    <Hyperlink.InputBindings>
                        <MouseBinding MouseAction="RightClick"
                                      Command="{Binding Path=DataContext.OpenRightClickMenuCommand,
                                                        RelativeSource={RelativeSource AncestorType={x:Type Grid},AncestorLevel=2}}"
                                      CommandParameter="{Binding Path=Name, Mode=OneTime}" />
                    </Hyperlink.InputBindings>
                </Hyperlink>
            </TextBlock>

        </Grid>
    </DataTemplate>

    <Style TargetType="Hyperlink" x:Key="Hyperlink">
        <Setter Property="Command"
                Value="{Binding Path=DataContext.NavigateTo,
                                  RelativeSource={RelativeSource Mode=FindAncestor,
                                  AncestorType={x:Type Grid}, AncestorLevel=2} }" />

        <Setter Property="Foreground" Value="{StaticResource HighlightBrush}" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="TextDecorations" Value="{x:Null}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="GenderCheckBoxes" TargetType="ContentControl"
                     d:DataContext="{d:DesignInstance models:GenderSettingsModel}">
        <StackPanel Orientation="Vertical">
            <TextBlock Foreground="{StaticResource ForegroundBrush}"
                       Text="Show ..."
                       Margin="2,0" />
            <CheckBox IsChecked="{Binding ShowMales}">Males</CheckBox>
            <CheckBox IsChecked="{Binding ShowFemales}">Females</CheckBox>
            <CheckBox IsChecked="{Binding ShowMaleHerms}">Masculine Herms</CheckBox>
            <CheckBox IsChecked="{Binding ShowFemaleHerms}">Feminine Herms</CheckBox>
            <CheckBox IsChecked="{Binding ShowCuntboys}">Cuntboys</CheckBox>
            <CheckBox IsChecked="{Binding ShowTransgenders}">Transgenders</CheckBox>
            <CheckBox IsChecked="{Binding ShowShemales}">Shemales</CheckBox>
            <CheckBox IsChecked="{Binding ShowNoGenders}">Genderless</CheckBox>
        </StackPanel>
    </ControlTemplate>

    <ControlTemplate x:Key="GeneralFilterCheckBoxes" TargetType="ContentControl"
                     d:DataContext="{d:DesignInstance models:GenericSearchSettingsModel}">
        <StackPanel Orientation="Vertical">
            <TextBlock Foreground="{StaticResource ForegroundBrush}"
                       Text="Who are ..."
                       Margin="2,0" />
            <CheckBox IsChecked="{Binding ShowFriends}">Friends</CheckBox>
            <CheckBox IsChecked="{Binding ShowBookmarks}">Bookmarked</CheckBox>
            <CheckBox IsChecked="{Binding ShowMods}">Moderators</CheckBox>
            <CheckBox IsChecked="{Binding ShowLooking}">Looking For Play</CheckBox>
            <CheckBox IsChecked="{Binding ShowNormal}">Just Online</CheckBox>
            <CheckBox IsChecked="{Binding ShowBusyAway}">Busy or Away</CheckBox>
            <CheckBox IsChecked="{Binding ShowNotInterested}">Not Interesting</CheckBox>
            <CheckBox IsChecked="{Binding ShowDnd}">DND</CheckBox>
            <CheckBox IsChecked="{Binding ShowIgnored}">Ignored</CheckBox>
        </StackPanel>
    </ControlTemplate>
    
    <Style x:Key="ActivatingToggleButton" 
           TargetType="ToggleButton" 
           BasedOn="{StaticResource ImageContentToggleButton}">
        <Style.Triggers>
            <Trigger Property="v:Properties.NeedsAttention" Value="True">
                <Setter Property="Foreground" Value="{StaticResource HighlightBrush}"/>
            </Trigger>
            <Trigger Property="v:Properties.NeedsAttention" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DepressedBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Foreground" Value="{StaticResource HighlightBrush}" />
                <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
                <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type v:ImageTextBox}" 
           TargetType="{x:Type v:ImageTextBox}" 
           BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Background" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource DepressedBrush}" />
        <Setter Property="Foreground" Value="{StaticResource DepressedBrush}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="LabelTextColor" Value="{StaticResource DepressedBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type v:ImageTextBox}">
                    <Border x:Name="Border"
                            Padding="2"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid x:Name="LayoutGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="22" />
                            </Grid.ColumnDefinitions>
                            <ScrollViewer x:Name="PART_ContentHost" Grid.Column="0" />
                            <Label x:Name="LabelText"
                                   Grid.Column="0"
                                   Foreground="{StaticResource DepressedBrush}"
                                   Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=LabelText}"
                                   Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HasText, Converter={StaticResource OppositeBoolConverter}}"
                                   Padding="2,0,0,0"
                                   FontStyle="Italic" />
                            <Border x:Name="PART_SearchIconBorder"
                                    Grid.Column="1"
                                    BorderThickness="1"
                                    Padding="1"
                                    VerticalAlignment="Stretch"
                                    HorizontalAlignment="Stretch"
                                    BorderBrush="Transparent"
                                    Background="Transparent">
                                <Rectangle Fill="{StaticResource DepressedBrush}" 
                                           Height="15" 
                                           Width="18"
                                           OpacityMask="{TemplateBinding IconSource, Converter={StaticResource ImagePathConverter}}"/>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="False">
                            <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource DepressedBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource HighlightBrush}" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="LabelText"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Focusable" Value="False" />
                            <Setter Property="Background" TargetName="Border" Value="{StaticResource BackgroundBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
                            <Setter Property="Content" TargetName="LabelText" Value="Sent"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource DepressedBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource HighlightBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>