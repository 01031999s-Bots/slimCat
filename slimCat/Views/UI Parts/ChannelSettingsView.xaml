<Popup  x:Class="Views.ChannelSettingsView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:sys="clr-namespace:System"
        
        PlacementTarget="{Binding ElementName=PopupAnchor}"
        Placement="Center"
        StaysOpen="False"
        IsOpen="{Binding Path=ChannelSettings.IsChangingSettings}">
    
    <Popup.Resources>
        <sys:NotifyLevelConverter x:Key="NotifyLevelConverter"/>
        <sys:InterestedOnlyBoolConverter x:Key="InterestedOnlyBoolConverter"/>
    </Popup.Resources>
    
    <Border BorderBrush="{StaticResource HighlightBrush}"
            BorderThickness="2"
            Background="{StaticResource BackgroundBrush}">
        <WrapPanel Orientation="Vertical"
                    Margin="10">
            <TextBlock Foreground="{StaticResource ForegroundBrush}"
                        FontSize="20"
                        HorizontalAlignment="Center"
                        Margin="10,0">
                    <Run Text="{Binding Path=Model.Title}"/>
                    <Run Text="Channel Settings" />
            </TextBlock>

            <StackPanel TextBlock.Foreground="{StaticResource ForegroundBrush}"
                        Margin="10">
                <CheckBox IsChecked="{Binding Path=ChannelSettings.LoggingEnabled}">Allow logging</CheckBox>

                <TextBlock Text="New Messages"
                           Margin="0,15,0,0"/>
                <Slider Maximum="3"
                        Minimum="0"
                        SmallChange="1"
                        LargeChange="1"
                        IsSnapToTickEnabled="True"
                        TickFrequency="1"
                        TickPlacement="BottomRight"
                        Value="{Binding ChannelSettings.MessageNotifyLevel}"
                        />
                <WrapPanel>
                    <TextBlock Text="{Binding ChannelSettings.MessageNotifyLevel, Converter={StaticResource NotifyLevelConverter}, ConverterParameter=flash}"/>
                    <Button Content="{Binding ChannelSettings.MessageNotifyOnlyForInteresting, Converter={StaticResource InterestedOnlyBoolConverter}}"
                            Command="{Binding InvertButtonCommand}"
                            CommandParameter="Messages"
                            Visibility="{Binding ShowAllSettings, Converter={StaticResource BoolConverter}}"
                            Style="{StaticResource ImageContentButton}"/>
                </WrapPanel>

                <StackPanel Visibility="{Binding ShowAllSettings, Converter={StaticResource BoolConverter}}">
                    <TextBlock Text="Users joining/leaving"
                               Margin="0,20,0,0"/>
                    <Slider Maximum="3"
                            Minimum="0"
                            SmallChange="1"
                            LargeChange="1"
                            IsSnapToTickEnabled="True"
                            TickFrequency="1"
                            TickPlacement="BottomRight"
                            Value="{Binding ChannelSettings.JoinLeaveNotifyLevel}"
                            />
                    <WrapPanel>
                        <TextBlock Text="{Binding ChannelSettings.JoinLeaveNotifyLevel, Converter={StaticResource NotifyLevelConverter}}"/>
                        <Button Content="{Binding ChannelSettings.JoinLeaveNotifyOnlyForInteresting, Converter={StaticResource InterestedOnlyBoolConverter}}"
                                Command="{Binding InvertButtonCommand}"
                                CommandParameter="JoinLeave"
                                Style="{StaticResource ImageContentButton}"/>
                    </WrapPanel>

                    <TextBlock Text="Mod promotion/demotion"
                               Margin="0,20,0,0"/>
                    <Slider Maximum="3"
                            Minimum="0"
                            SmallChange="1"
                            LargeChange="1"
                            IsSnapToTickEnabled="True"
                            TickFrequency="1"
                            TickPlacement="BottomRight"
                            Value="{Binding ChannelSettings.PromoteDemoteNotifyLevel}"
                            />
                    <WrapPanel>
                        <TextBlock Text="{Binding ChannelSettings.PromoteDemoteNotifyLevel, Converter={StaticResource NotifyLevelConverter}}"/>
                        <Button Content="{Binding ChannelSettings.PromoteDemoteNotifyOnlyForInteresting, Converter={StaticResource InterestedOnlyBoolConverter}}"
                                Command="{Binding InvertButtonCommand}"
                                CommandParameter="PromoteDemote"
                                Style="{StaticResource ImageContentButton}"/>
                    </WrapPanel>
                </StackPanel>
                
                <TextBlock Margin="0,20,0,0">Notify terms (seperate with commas):</TextBlock>
                <TextBox Text="{Binding Path=ChannelSettings.NotifyTerms, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         TextWrapping="Wrap"
                         MaxWidth="500"
                         FontSize="12"/>

                <StackPanel Visibility="{Binding Path=HasNotifyTerms, Mode=OneWay, Converter={StaticResource BoolConverter}}"
                            Margin="10,0,0,0">

                    <CheckBox IsChecked="{Binding Path=ChannelSettings.NotifyIncludesCharacterNames}"
                        ToolTip="If checked, the terms above will try to be matched in each poster's name for the channel. Upon a whole word match, a notification is spawned."
                        >Include character names</CheckBox>
                </StackPanel>
            </StackPanel>
            <Button Content="Close Settings"
                    Margin="10,5"
                    Foreground="{StaticResource ForegroundBrush}"
                    Command="{Binding Path=ChannelSettings.OpenChannelSettingsCommand}"/>
        </WrapPanel>
    </Border>
</Popup>
