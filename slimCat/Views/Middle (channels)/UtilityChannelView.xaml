<!--
Copyright (c) 2013, Justin Kadrovach
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:
    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.
    * Neither the name of the <organization> nor the
      names of its contributors may be used to endorse or promote products
      derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL JUSTIN KADROVACH BE LIABLE FOR ANY
DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->
<v:DisposableView x:Class="Views.UtilityChannelView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:v="clr-namespace:Views">

    <Grid TextBlock.FontSize="16">
        <Border HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Visibility="{Binding Path=IsConnecting, Converter={StaticResource BoolConverter}}">
            <StackPanel>
                <TextBlock Foreground="{StaticResource ForegroundBrush}"
                           FontSize="24"
                           TextWrapping="Wrap">
                    <Run Text="{Binding ConnectFlavorText, Mode=OneWay}"/>
                </TextBlock>
            </StackPanel>
        </Border>
        
        <Grid Margin="10"
          Visibility="{Binding Path=CM.IsAuthenticated, Converter={StaticResource BoolConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition />
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>

            <Border BorderBrush="{StaticResource HighlightBrush}"
                    BorderThickness="0,0,0,1">
                <Expander Header="{Binding Path=Model.ID, Mode=OneWay}"
                      Margin="0"
                      Padding="0">
                    <TextBlock Foreground="{StaticResource ForegroundBrush}"
                               TextWrapping="Wrap">
                        
                        <Run Text="{Binding Path=ClientIDString, Mode=OneWay}"/>
                        <LineBreak />
                        
                        <Run Text="Users: " />
                        <Run Text="{Binding Path=OnlineCount, Mode=OneWay}"/>
                        <Run Text="{Binding Path=OnlineCountChange, Mode=OneWay}"/>
                        <LineBreak />
                        <Run Text="Friends: " />
                        <Run Text="{Binding Path=OnlineFriendsCount, Mode=OneWay}" />
                        <LineBreak />
                    
                        <Run Text="Bookmarks: " />
                        <Run Text="{Binding Path=OnlineBookmarksCount, Mode=OneWay}" />
                        <LineBreak />
            
                        <Run Text="Server uptime: " />
                        <Run Text="{Binding Path=RoughServerUpTime, Mode=OneWay}" Foreground="{StaticResource HighlightBrush}" />
                        <LineBreak />
            
                        <Run Text="Client uptime: " />
                        <Run Text="{Binding Path=RoughClientUpTime, Mode=OneWay}" Foreground="{StaticResource HighlightBrush}" />
                        <LineBreak />
                        
                        <Run Text="Last server response: " />
                        <Run Text="{Binding Path=LastMessageReceived, Mode=OneWay}" Foreground="{StaticResource HighlightBrush}" />
                    </TextBlock>
                </Expander>
            </Border>

            <StackPanel Grid.Row="1">
                <Expander Header="Settings">
                    <StackPanel TextBlock.Foreground="{StaticResource ForegroundBrush}">
                        <StackPanel  Margin="0,5">
                            <TextBlock Text="Notifications Volume" Margin="5,0,0,0" />
                            <Slider Value="{Binding Volume}" 
                                    LargeChange=".20"
                                    SmallChange=".10"
                                    Minimum="0" 
                                    Maximum="1"
                                    Width="200" 
                                    TickFrequency=".10"
                                    TickPlacement="BottomRight"
                                    HorizontalAlignment="Left" 
                                    Margin="5,0,0,0" />
                        </StackPanel>

                        <CheckBox IsChecked="{Binding ShowNotifications}"
                                  VerticalAlignment="Center"
                                  Margin="0,5">Allow Toast Notifications</CheckBox>
                        <CheckBox IsChecked="{Binding AllowLogging}"
                                  VerticalAlignment="Center"
                                  Margin="0,5">Allow Logging</CheckBox>

                        <WrapPanel Margin="0,5">
                            <TextBlock Margin="0,0,5,0">Keep</TextBlock>
                            <TextBox Text="{Binding Path=BackLogMax, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     VerticalAlignment="Center"
                                     FontSize="12"/>
                            <TextBlock Margin="5,0,0,0">Messages in channel backlogs</TextBlock>
                        </WrapPanel>
                        
                        <TextBlock Text="Global Notify Words (seperate with commas)"/>
                        <TextBox Text="{Binding Path=GlobalNotifyTerms, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 TextWrapping="Wrap"
                                 FontSize="12"/>
                    </StackPanel>
                </Expander>
                
                <Expander Header="Update"
                          Visibility="{Binding HasNewUpdate, Mode=OneWay, Converter={StaticResource BoolConverter}}">
                    <StackPanel TextBlock.Foreground="{StaticResource ForegroundBrush}">
                        <TextBlock>
                            <Run Text="There is a new update available!"/>
                            <LineBreak/>
                            <Run Text="{Binding Path=UpdateName, Mode=OneWay}"/>
                            <Run Text="("/>
                            <Run Text="{Binding Path=UpdateBuildTime, Mode=OneWay}"/>
                            <Run Text=")"/>
                            <LineBreak/>
                            
                            <Hyperlink CommandParameter="{Binding Path=UpdateLink, Mode=OneWay}"
                                       >Download Now</Hyperlink>
                        </TextBlock>                        
                        
                    </StackPanel>
                </Expander>
            </StackPanel>

            <v:CreateReportView />
            <v:RightClickMenu />
            <v:ChannelTextBoxEntryView Grid.Row="2"
                                       Margin="0,0,0,10"/>
        </Grid>
    </Grid>
</v:DisposableView>
