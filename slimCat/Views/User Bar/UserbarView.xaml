<UserControl x:Class="slimCat.Views.UserbarView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d"
             xmlns:vm="clr-namespace:slimCat.ViewModels"
             xmlns:v="clr-namespace:slimCat.Views"
             xmlns:libraries="clr-namespace:slimCat.Libraries"
             xmlns:utilities="clr-namespace:slimCat.Utilities"
             xmlns:models="clr-namespace:slimCat.Models"
             MouseLeave="OnMouseLeave"
             
             d:DataContext="{d:DesignInstance vm:UserbarViewModel}">
    
    <UserControl.Resources>
        <utilities:PmOrChannelTemplateSelector x:Key="PmOrChannelTemplateSelector"/>

        <DataTemplate x:Key="GeneralChannelTemplate">
            <v:ChannelSelectView />
        </DataTemplate>
        
        <DataTemplate x:Key="PmChannelTemplate">
            <v:PmSelectView/>
        </DataTemplate>
    </UserControl.Resources>

    <DockPanel TextBlock.FontSize="14"
               TextBlock.Foreground="{StaticResource ForegroundBrush}"
               TextBlock.TextAlignment="Center">

        <Button Width="15"
                DockPanel.Dock="Right"
                Content="{Binding Path=ExpandString, Mode=OneWay}"
                BorderThickness="0"
                Padding="0"
                HorizontalAlignment="Center"
                Background="{Binding Path=HasUpdate, Mode=OneWay, Converter={StaticResource ColorConverter}}"
                Command="{Binding Path=ToggleBarCommand}" />
        <Grid Margin="15,20"
              Visibility="{Binding Path=IsExpanded, Converter={StaticResource BoolConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <Border BorderBrush="{StaticResource HighlightBrush}"
                    BorderThickness="0,0,0,1"
                    x:Name="PopupAnchor"
                    HorizontalAlignment="Stretch">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Border MaxHeight="75" 
                            MaxWidth="75" 
                            Margin="0,0,10,0"
                            Visibility="{Binding Source={x:Static models:ApplicationSettings.ShowAvatars}, Converter={StaticResource BoolConverter}}">
                        <Image Source="{Binding Path=ChatModel.CurrentCharacter.Avatar, Mode=OneWay}" />
                    </Border>

                    <Grid Margin="5,-5,0,0"
                          Grid.Column="1">

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                            <RowDefinition Height="24" />
                        </Grid.RowDefinitions>

                        <TextBlock Text="{Binding Path=ChatModel.CurrentCharacter.Name, Mode=OneWay}"
                                   HorizontalAlignment="Left"
                                   TextAlignment="Left"
                                   MaxWidth="100"
                                   TextWrapping="Wrap"
                                   FontSize="20" />

                        <DockPanel Grid.Row="1">

                            <Button Content="{Binding Path=ChatModel.CurrentCharacter.Status, Mode=OneWay}"
                                    VerticalAlignment="Top"
                                    HorizontalAlignment="Left"
                                    ToolTip="Change status"
                                    Style="{StaticResource ImageContentButton}"
                                    Command="{Binding ToggleStatusWindowCommand}"
                                    Margin="0,4,0,0"
                                    FontSize="16"
                                    DockPanel.Dock="Left" />
                            
                            <v:AutoButtonView
                                IsChecked="{Binding AutoReplyEnabled, Mode=TwoWay}"
                                ToolTip="Change auto reply settings"
                                Command="{Binding ToggleAutoReplyWindowCommand}"
                                VerticalAlignment="Center"
                                DockPanel.Dock="Left"
                                Margin="2,0,0,0" />

                        </DockPanel>

                        <WrapPanel HorizontalAlignment="Left"
                                   Grid.Row="2"
                                   VerticalAlignment="Center">

                            <WrapPanel Margin="0,0,0,2" VerticalAlignment="Bottom">
                                <WrapPanel.Resources>
                                    <Style TargetType="Rectangle">
                                        <Setter Property="Fill" Value="{StaticResource ForegroundBrush}" />
                                        <Setter Property="Width" Value="5" />
                                        <Setter Property="Margin" Value="1,0" />
                                        <Setter Property="VerticalAlignment" Value="Bottom" />
                                    </Style>
                                </WrapPanel.Resources>
                                <Rectangle Height="3"
                                           Visibility="{Binding Path=ConnectionIsConnected, Mode=OneWay, Converter={StaticResource BoolConverter}}" />
                                <Rectangle Height="6"
                                           Visibility="{Binding Path=ConnectionIsModerate, Mode=OneWay, Converter={StaticResource BoolConverter}}" />
                                <Rectangle Height="10"
                                           Visibility="{Binding Path=ConnectionIsGood, Mode=OneWay, Converter={StaticResource BoolConverter}}" />
                                <Rectangle Height="15"
                                           Visibility="{Binding Path=ConnectionIsPerfect, Mode=OneWay, Converter={StaticResource BoolConverter}}" />
                                <TextBlock Visibility="{Binding Path=IsDisconnected, Mode=OneWay, Converter={StaticResource BoolConverter}}"
                                           Foreground="{StaticResource ContrastBrush}"
                                           FontSize="16">disconnected</TextBlock>
                            </WrapPanel>

                            <v:LogoutButtonView Command="{Binding LogoutCommand}" 
                                                Visibility="{Binding Path=IsDisconnected, Mode=OneWay, Converter={StaticResource OppositeBoolConverter}}"/>

                            <v:PinButtonView Command="{Binding SaveChannelsCommand}" 
                                             Visibility="{Binding Path=IsDisconnected, Mode=OneWay, Converter={StaticResource OppositeBoolConverter}}"/>

                        </WrapPanel>
                    </Grid>
                </Grid>
            </Border>

            <libraries:NonTopmostPopup IsOpen="{Binding Path=IsChangingStatus, Mode=OneWay}"
                                       PlacementTarget="{Binding ElementName=PopupAnchor}"
                                       Grid.Row="0"
                                       Placement="Center">
                <Border BorderBrush="{StaticResource HighlightBrush}"
                        BorderThickness="1">
                    <StackPanel Orientation="Vertical"
                                Margin="5"
                                Background="{StaticResource BackgroundBrush}"
                                MinWidth="200">
                        <TextBlock Text="Change Status"
                                   Foreground="{StaticResource ForegroundBrush}"
                                   FontSize="20"
                                   Margin="10,5" />

                        <TextBlock
                            Foreground="{StaticResource DepressedBrush}"
                            HorizontalAlignment="Left"
                            Margin="10,10,10,0">
                            Status
                        </TextBlock>
                        <ComboBox ItemsSource="{Binding Path=StatusTypes}"
                                  DisplayMemberPath="Key"
                                  SelectedValue="{Binding Path=NewStatusType}"
                                  SelectedValuePath="Value"
                                  Margin="10,0,10,0"
                                  FontSize="12" />

                        <TextBlock
                            Foreground="{StaticResource DepressedBrush}"
                            HorizontalAlignment="Left"
                            Margin="10,10,10,0">
                            Status Message
                        </TextBlock>
                        <TextBox
                            Text="{Binding Path=NewStatusString, UpdateSourceTrigger=PropertyChanged}"
                            FontSize="12"
                            TextWrapping="Wrap"
                            MaxWidth="200"
                            Margin="10,0,10,10" />

                        <Button Content="{Binding CloseOrSave}"
                                Margin="10,5"
                                Command="{Binding ToggleStatusWindowCommand}" />
                    </StackPanel>

                </Border>
            </libraries:NonTopmostPopup>

            <libraries:NonTopmostPopup IsOpen="{Binding Path=IsChangingAuto, Mode=OneWay}"
                                       PlacementTarget="{Binding ElementName=PopupAnchor}"
                                       Grid.Row="0"
                                       Placement="Center">
                <Border BorderBrush="{StaticResource HighlightBrush}"
                        BorderThickness="1">
                    <StackPanel Orientation="Vertical"
                                Margin="5"
                                Background="{StaticResource BackgroundBrush}"
                                MinWidth="200">
                        <TextBlock Text="Change Auto Reply"
                                   Foreground="{StaticResource ForegroundBrush}"
                                   FontSize="20"
                                   Margin="10,5" />

                        <CheckBox IsChecked="{Binding AutoReplyEnabled}"
                                  VerticalAlignment="Center"
                                  Margin="10,5">
                            Auto Reply Enabled
                        </CheckBox>

                        <TextBlock
                            Foreground="{StaticResource DepressedBrush}"
                            HorizontalAlignment="Left"
                            Margin="10,0,10,0">
                            Reply Message
                        </TextBlock>
                        <TextBox
                            Text="{Binding Path=NewAutoReplyString, UpdateSourceTrigger=PropertyChanged}"
                            FontSize="12"
                            TextWrapping="Wrap"
                            MaxWidth="200"
                            Margin="10,0,10,10" />

                        <Button Content="{Binding Path=CloseOrSave}"
                                Margin="10,5"
                                Command="{Binding ToggleAutoReplyWindowCommand}" />
                    </StackPanel>

                </Border>
            </libraries:NonTopmostPopup>
            <ScrollViewer Grid.Row="1"
                          CanContentScroll="False">
                <StackPanel>
                    <Expander Header="Conversations"
                              IsExpanded="{Binding Path=PmsAreExpanded}"
                              Visibility="{Binding Path=HasPms, Converter={StaticResource BoolConverter}}">
                        <ListBox ItemsSource="{Binding Path=ChatModel.CurrentPms, Mode=OneWay}"
                                 HorizontalContentAlignment="Stretch"
                                 SelectedIndex="{Binding Path=PmSelected, Mode=TwoWay}"
                                 ItemTemplate="{x:Null}"
                                 ItemTemplateSelector="{StaticResource PmOrChannelTemplateSelector}">
                            <ListBox.ItemContainerStyle>
                                <Style>
                                    <Setter Property="ListBoxItem.AllowDrop" Value="True" />
                                    <EventSetter Event="ListBoxItem.PreviewMouseLeftButtonDown"
                                                 Handler="OnPreviewMouseClick" />
                                    <EventSetter Event="ListBoxItem.MouseMove" Handler="OnMouseMove" />
                                    <EventSetter Event="ListBoxItem.Drop" Handler="OnPmModelDragDrop" />
                                    <EventSetter Event="ListBoxItem.PreviewDragEnter" Handler="CheckAsPm" />
                                    <EventSetter Event="ListBoxItem.PreviewDragOver" Handler="CheckAsPm" />
                                </Style>
                            </ListBox.ItemContainerStyle>
                        </ListBox>
                    </Expander>
                    <Expander Header="Channels"
                              IsExpanded="{Binding Path=ChannelsAreExpanded}">
                        <ListBox ItemsSource="{Binding Path=ChatModel.CurrentChannels, Mode=OneWay}"
                                 HorizontalContentAlignment="Stretch"
                                 SelectedIndex="{Binding Path=ChannelSelected, Mode=TwoWay}"
                                 ItemTemplate="{StaticResource GeneralChannelTemplate}">
                            <ListBox.ItemContainerStyle>
                                <Style>
                                    <Setter Property="ListBoxItem.AllowDrop" Value="True" />
                                    <EventSetter Event="ListBoxItem.PreviewMouseLeftButtonDown"
                                                 Handler="OnPreviewMouseClick" />
                                    <EventSetter Event="ListBoxItem.Drop" Handler="OnChannelModelDragDrop" />
                                    <EventSetter Event="ListBoxItem.MouseMove" Handler="OnMouseMove" />
                                    <EventSetter Event="ListBoxItem.PreviewDragEnter" Handler="CheckAsChannel" />
                                    <EventSetter Event="ListBoxItem.PreviewDragOver" Handler="CheckAsChannel" />
                                </Style>
                            </ListBox.ItemContainerStyle>
                        </ListBox>
                    </Expander>
                </StackPanel>
            </ScrollViewer>
        </Grid>
    </DockPanel>
</UserControl>